#!/usr/bin/env node
// var config = require('../config');
// var mongoose = require('mongoose');
// var models = require('../models');

// var dataName = 'mock';
// if(process.argv.length > 3) {
//   console.log(process.argv);
//   dataName = process.argv[process.argv.length - 1];
// }

// console.log('Loading data: ' + dataName + '.js');
// var data = require('../data/' + dataName + '.js');

// for(var type in data) {
//   var typeData = data[type];
//   var model = mongoose.model(type);
//   typeData.forEach(function(d) {
//     (new model(d)).save(function(err, doc) {
//   	  if(err) {
//   	    console.error(err);
//   	  } else {
//   	    console.log('Inserted data: ' + doc);
//   	  }
// 	  });
//   });
// };
var mongoose = require('mongoose');
var ObjectId = mongoose.Types.ObjectId;

var config = require('../config');
var app = require('../app');
var userService = require('../services/userService');
var oauthService = require('../services/oauthService');
var models = require('../models');
var PostsModel = models.PostsModel;
var DishesModel = models.DishesModel;

var connection = mongoose.connection;

var TEST_DOC_NUM = 20;

var fixtures = {
  hostUser: {
    _id: new ObjectId('hosthosthost'),
    email: 'host@cmu.edu',
    password: 'testpassword',
    name: "Lee",
    gender: 1
  },
  guestUser: {
    _id: new ObjectId('guestguestst'),
    email: 'guest@cmu.edu',
    password: 'testpassword',
    name: "Yu",
    gender: 1,
  },
  client: {
    clientId: config.clientId,
    clientSecret: config.clientSecret,
    redirectUri: '/oauth/redirect',
    grantTypes: ['password', 'refresh_token']
  },
  post: {
    date: new Date(),
    location: "12345 Tower KW St. SA 5000",
    host: new ObjectId('hosthosthost'),
    dishes: [new ObjectId('dishdishdish'), new ObjectId('dishdishdish'), new ObjectId('dishdishdish')],
    guests: [new ObjectId('guestguestst'), new ObjectId('123123123123'), new ObjectId('234234234234')],
    maxGuestNum: 10,
    price: 1000
  },
  dish: {
    _id: new ObjectId('dishdishdish'),
    name: "kon-po chicken",
    description: "superior",
    pictures: ['4WsquNEjFEjFL9O+9YgOL9O+EjFL9O+9YgO9YgOQbqbAEjFL9O+9YgO', '4WsquNEjFEjFL9O+9YgOL9O+EjFL9O+9YgO9YgOQbqbAEjFL9O+9YgO']
  }
};

if (connection.readyState !== 1) {
  connection.on('open', onReady);
} else {
  onReady();
}

function onReady () {
  connection.db.dropDatabase(function() {
    oauthService.saveClient(fixtures.client, function() {
        userService.saveUser(fixtures.hostUser, function() {
          userService.saveUser(fixtures.guestUser, function() {
            new DishesModel(fixtures.dish).save(function(err, doc) {
              var posts = [];
              for (var i = 0; i < TEST_DOC_NUM; i++) {
                posts.push(fixtures.post);
              }
              PostsModel.create(posts, function() {
                console.log("mock data insert done");
                process.exit(0);  
              });
            });
          });
        });
    });
  });
}
